.inputWrapper {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

.label {
  font-size: var(--text-sm);
  font-weight: 500;
  color: var(--text-primary);
}

.required::after {
  content: ' *';
  color: var(--error);
}

.inputContainer {
  position: relative;
  display: flex;
  align-items: center;
}

.input {
  width: 100%;
  padding: var(--s3) var(--s4);
  border: 1.5px solid var(--cocoa-outline);
  border-radius: var(--radius-md);
  font-family: var(--font-body);
  font-size: var(--text-body);
  color: var(--ink);
  background: var(--parchment);
  transition: all 120ms ease-out;
  min-height: 44px;
}

.input:focus {
  outline: 3px dotted var(--info);
  outline-offset: 2px;
  border-color: var(--info);
}

.input::placeholder {
  color: var(--text-secondary);
}

.input:disabled {
  background: var(--bg-secondary);
  cursor: not-allowed;
  opacity: 0.7;
}

/* Error state */
.error {
  border-color: var(--danger);
}

.error:focus {
  border-color: var(--danger);
  outline-color: var(--danger);
}

/* Sizes */
.sm {
  padding: var(--space-xs) var(--space-sm);
  font-size: var(--text-sm);
}

.md {
  padding: var(--space-sm) var(--space-md);
  font-size: var(--text-base);
}

.lg {
  padding: var(--space-md) var(--space-lg);
  font-size: var(--text-lg);
}

/* Icon styles */
.withIcon {
  padding-left: 40px;
}

.icon {
  position: absolute;
  left: var(--space-sm);
  color: var(--text-secondary);
  pointer-events: none;
}

/* Helper text */
.helperText {
  font-size: var(--text-xs);
  color: var(--text-secondary);
}

.errorText {
  font-size: var(--text-xs);
  color: var(--error);
}

/* Textarea specific styles */
.textarea {
  min-height: 80px;
  resize: vertical;
  font-family: inherit;
  line-height: 1.5;
}